*,
*::after,
*::before {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

:root {
  --cell-size: 160px;
  --mark-size: calc(var(--cell-size) * 0.9);

  --circle-color: orange;
  --x-color: green;
}

body {
  font-family: "Gill Sans", "Gill Sans MT", Calibri, "Trebuchet MS", sans-serif;
}

.board {
  width: 100vw;
  height: 100vh;

  display: grid;
  justify-content: center;
  align-content: center;
  justify-items: center;
  align-items: center;
  grid-template-columns: repeat(3, auto);
}

/* CELL MAIN SETTINGS */

.cell {
  width: var(--cell-size);
  height: var(--cell-size);
  background-color: lightgray;
  border: 2px solid black;

  display: flex;
  justify-content: center;
  align-items: center;

  cursor: pointer;
}

/* Get rid of the border */

.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3) {
  border-top: none;
}

.cell:nth-child(3n + 1) {
  border-left: none;
}

.cell:nth-child(3n + 3) {
  border-right: none;
}

.cell:nth-child(7),
.cell:nth-child(8),
.cell:nth-child(9) {
  border-bottom: none;
}

/* CELL PLAYER SETTINGS

If a cell has class .x, then x-player is on the move, 
so
1) hovering over empty cells should display x
2) hovering over full cells should display nothing and cursor: not allowed
*/

.cell.x,
.cell.circle {
  cursor: not-allowed;
}

.cell.x::before,
.cell.x::after,
.cell.circle::before {
  background-color: black;
}

.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after {
  background-color: var(--x-color);
}
.board.circle .cell:not(.x):not(.circle):hover::before {
  background-color: var(--circle-color);
}

.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after {
  content: "";
  position: absolute;
  width: calc(var(--mark-size) * 0.15);
  height: var(--mark-size);
  transition: all 0.5s ease-in;
}

.cell.x::before,
.board.x .cell:not(.x):not(.circle):hover::before {
  transform: rotate(45deg);
}

.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::after {
  transform: rotate(-45deg);
}

.cell.circle::before,
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::before,
.board.circle .cell:not(.x):not(.circle):hover::after {
  content: "";
  position: absolute;
  border-radius: 50%;
  transition: all 0.5s ease-in;
}

.cell.circle::before,
.board.circle .cell:not(.x):not(.circle):hover::before {
  width: var(--mark-size);
  height: var(--mark-size);
}

.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::after {
  width: calc(var(--mark-size) * 0.7);
  height: calc(var(--mark-size) * 0.7);
  background-color: lightgrey;
  transition: all 0.5s ease-in;
}

/* Intro message */

.intro-message {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;

  background-color: rgba(0, 0, 0, 0.9);
  color: rgba(255, 255, 255, 0.8);
  font-size: 3.4rem;

  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

button {
  padding: 0.25em 0.5em;
  margin: 0.3em 0.5em;

  font-size: 2.8rem;
  background-color: rgba(255, 255, 255, 0.8);
  border: none;
  border-radius: 0.5em;
  cursor: pointer;
  transition: all 0.5s ease-out;
}

.intro-message button:hover {
  background-color: transparent;
  color: rgba(255, 255, 255, 0.8);
}

/* Winning message */

.winning-message {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;

  background-color: rgba(0, 0, 0, 0.9);
  color: rgba(255, 255, 255, 0.8);
  font-size: 5rem;

  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.winning-message button:hover {
  background-color: transparent;
  color: rgba(255, 255, 255, 0.8);
}

.hide {
  display: none;
}
